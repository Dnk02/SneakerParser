from aiogram import Dispatcher, Bot, types, executor
from environs import Env

from Parser import street_beat_puma, street_beat_adidas, street_beat_reebok, street_beat_new_balance, \
    next_street_beat
from buttons import markup_stores, markup_brands, markup_brands2, markup_street_beat_choose, markup_sneaker_head_choose
from sneaker_head import sneaker_head_puma, sneaker_head_adidas, sneaker_head_new_balance, next_sneaker_head

env = Env()
env.read_env()

bot = Bot(token=env.str("token"))
dp = Dispatcher(bot)


@dp.message_handler(commands=["start"])
async def start(mess: types.Message):
    await mess.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω", reply_markup=markup_stores)


@dp.message_handler(text="Street-beat")
async def street_beat(mess: types.Message):
    await mess.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥", reply_markup=markup_brands)


@dp.message_handler(text="Sneaker-head")
async def street_beat(mess: types.Message):
    await mess.answer("–í—ã–±–µ—Ä–∏—Ç–µ –±—Ä–µ–Ω–¥", reply_markup=markup_brands2)


@dp.message_handler(text="‚è™–ö –≤—ã–±–æ—Ä—É –º–∞–≥–∞–∑–∏–Ω–∞")
async def street_beat(mess: types.Message):
    await mess.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω", reply_markup=markup_stores)


@dp.message_handler(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É‚è™")
async def street_beat_back(mess: types.Message):
    await mess.answer("–ß—Ç–æ –∏—Å–∫–∞—Ç—å", reply_markup=markup_brands)


@dp.message_handler(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É‚èÆ")
async def sneaker_head_back(mess: types.Message):
    await mess.answer("–ß—Ç–æ –∏—Å–∫–∞—Ç—å", reply_markup=markup_brands2)


@dp.message_handler(text="üëüPuma")
async def streetbeat_puma(mess: types.Message):
    try:
        positions = street_beat_puma()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_street_beat_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüAdidas")
async def streetbeat_adidas(mess: types.Message):
    try:
        positions = street_beat_adidas()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_street_beat_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüReebok")
async def streetbeat_reebok(mess: types.Message):
    try:
        positions = street_beat_reebok()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_street_beat_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüNew-balance")
async def streetbeat_new_balance(mess: types.Message):
    try:
        positions = street_beat_new_balance()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_street_beat_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüüëüPuma")
async def sneakerhead_puma(mess: types.Message):
    try:
        positions = sneaker_head_puma()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_sneaker_head_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüüëüAdidas")
async def sneakerhead_puma(mess: types.Message):
    try:
        positions = sneaker_head_adidas()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_sneaker_head_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="üëüüëüNew-balance")
async def sneakerhead_puma(mess: types.Message):
    try:
        positions = sneaker_head_new_balance()
        await mess.answer(f"–ù–∞–π–¥–µ–Ω–æ {positions} –ø–æ–∑–∏—Ü–∏–π", reply_markup=markup_sneaker_head_choose)
    except:
        await mess.answer("–û—à–∏–±–∫–∞ 403, –ø–æ–≤—Ç–æ—Ä–∏ –ø–æ–∑–∂–µ")



@dp.message_handler(text="–ü–æ–∫–∞–∑–∞—Ç—å‚è©")
async def next(mess: types.Message):
    try:
        sneakers = next_street_beat()
        for position in sneakers:
            result = f""
            for item in position:
                result += f"{item}\n"
            await mess.answer(result)
    except IndexError:
        await mess.answer("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏")


@dp.message_handler(text="–ü–æ–∫–∞–∑–∞—Ç—å‚è≠")
async def next(mess: types.Message):
    try:
        sneakers = next_sneaker_head()
        for position in sneakers:
            result = f""
            for item in position:
                result += f"{item}\n"
            await mess.answer(result)
    except IndexError:
        await mess.answer("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏")


if __name__ == "__main__":
    executor.start_polling(dp)
